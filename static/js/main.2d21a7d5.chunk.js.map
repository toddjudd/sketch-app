{"version":3,"sources":["components/Controls.js","components/Canvas.js","index.js"],"names":["Controls","className","id","onClick","props","pickTool","e","pickLine","pickColor","Component","Canvas","drawLine","ctx","shape","console","log","startPos","state","currentPos","beginPath","moveTo","lineTo","stroke","drawSquare","rectHeight","rectWidth","strokeRect","drawCircle","midPos","arcRadius","arc","Math","PI","setState","color","getComputedStyle","target","lineDash","tool","canvas","React","createRef","endPos","drawing","shapes","radW","abs","radH","xRad","yRad","this","push","drawShapes","current","getContext","clearRect","width","height","forEach","strokeStyle","setLineDash","preventDefault","button","type","pageX","pageY","saveShape","resizeCanvas","window","innerWidth","innerHeight","addEventListener","Fragment","ref","onTouchStart","touch","onMouseDown","onTouchEnd","onMouseUp","onMouseMove","onTouchMove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d21a7d5.chunk.js","sourcesContent":["// Controls.js\r\nimport React, { Component } from 'react';\r\n\r\nclass Controls extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <ul className='Controls' id='controls'>\r\n        <li onClick={() => this.props.pickTool('drawSquare')}>\r\n          <div className='shapeSelector' id='square'></div>\r\n        </li>\r\n        <li onClick={() => this.props.pickTool('drawCircle')}>\r\n          <div className='shapeSelector' id='circle'></div>\r\n        </li>\r\n        <li onClick={() => this.props.pickTool('drawLine')}>\r\n          <div className='shapeSelector' id='line'></div>\r\n        </li>\r\n        <li id='breakpoint' />\r\n        <li\r\n          onClick={e => {\r\n            this.props.pickLine([15, 15]);\r\n          }}\r\n        >\r\n          <div className='line' id='dottedLine'></div>\r\n        </li>\r\n        <li\r\n          onClick={e => {\r\n            this.props.pickLine([]);\r\n          }}\r\n        >\r\n          <div className='line' id='solidLine'></div>\r\n        </li>\r\n        <li\r\n          onClick={e => {\r\n            this.props.pickColor(e);\r\n          }}\r\n        >\r\n          <i className='fas fa-rocket' id='red'></i>\r\n        </li>\r\n        <li\r\n          onClick={e => {\r\n            this.props.pickColor(e);\r\n          }}\r\n        >\r\n          <i className='fas fa-rocket' id='blue'></i>\r\n        </li>\r\n        <li\r\n          onClick={e => {\r\n            this.props.pickColor(e);\r\n          }}\r\n        >\r\n          <i className='fas fa-rocket' id='green'></i>\r\n        </li>\r\n        <li\r\n          onClick={e => {\r\n            this.props.pickColor(e);\r\n          }}\r\n        >\r\n          <i className='fas fa-rocket' id='yellow'></i>\r\n        </li>\r\n        <li\r\n          onClick={e => {\r\n            this.props.pickColor(e);\r\n          }}\r\n        >\r\n          <i className='fas fa-rocket' id='black'></i>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","// Canvas.js\r\nimport React, { Component } from 'react';\r\nimport Controls from './Controls';\r\n\r\nclass Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvas = React.createRef();\r\n    this.state = {\r\n      startPos: [0, 0],\r\n      endPos: [0, 0],\r\n      currentPos: [0, 0],\r\n      drawing: false,\r\n      color: '#626c70',\r\n      lineDash: [],\r\n      tool: 'drawLine',\r\n      shapes: [],\r\n      midPos: () => {\r\n        const x = (this.state.startPos[0] + this.state.currentPos[0]) / 2;\r\n        const y = (this.state.startPos[1] + this.state.currentPos[1]) / 2;\r\n        return [x, y];\r\n      },\r\n      rectWidth: () => {\r\n        return this.state.currentPos[0] - this.state.startPos[0];\r\n      },\r\n      rectHeight: () => {\r\n        return this.state.currentPos[1] - this.state.startPos[1];\r\n      },\r\n      arcRadius: () => {\r\n        let radW = Math.abs(this.state.rectWidth() / 2);\r\n        let radH = Math.abs(this.state.rectHeight() / 2);\r\n        return radH < radW ? radW : radH;\r\n      },\r\n      xRad: () => {\r\n        return Math.abs(this.state.rectWidth() / 2);\r\n      },\r\n      yRad: () => {\r\n        return Math.abs(this.state.rectHeight() / 2);\r\n      }\r\n    };\r\n  }\r\n\r\n  saveShape() {\r\n    //get state\r\n    let shapes = this.state.shapes;\r\n    //add line\r\n    shapes.push({\r\n      startPos: this.state.startPos,\r\n      currentPos: this.state.endPos,\r\n      endPos: this.state.endPos,\r\n      color: this.state.color,\r\n      lineDash: this.state.lineDash,\r\n      tool: this.state.tool,\r\n      midPos: this.state.midPos(),\r\n      rectWidth: this.state.rectWidth(),\r\n      rectHeight: this.state.rectHeight(),\r\n      arcRadius: this.state.arcRadius()\r\n    });\r\n    //save state\r\n    this.setState({ shapes });\r\n    this.drawShapes();\r\n  }\r\n\r\n  drawShapes() {\r\n    console.log('drawShapes');\r\n    const ctx = this.canvas.current.getContext('2d');\r\n    if (!this.state.drawing) ctx.clearRect(0, 0, this.canvas.current.width, this.canvas.current.height);\r\n    this.state.shapes.forEach(shape => {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = shape.color;\r\n      ctx.setLineDash(shape.lineDash);\r\n      this[shape.tool](ctx, shape);\r\n    });\r\n  }\r\n\r\n  touch(e) {\r\n    e.preventDefault();\r\n    if (e.button === 2) return;\r\n    switch (e.type) {\r\n      case 'mousedown':\r\n      case 'touchstart':\r\n        // alert('touchstart');\r\n        this.setState({\r\n          startPos: [e.pageX, e.pageY],\r\n          drawing: true\r\n        });\r\n        break;\r\n      case 'mouseup':\r\n      case 'touchend':\r\n        // alert('touchend');\r\n        this.setState(\r\n          {\r\n            endPos: [e.pageX, e.pageY],\r\n            drawing: false\r\n          },\r\n          this.saveShape\r\n        );\r\n        break;\r\n      default:\r\n        // alert('touchdefault');\r\n        this.setState({\r\n          currentPos: [e.pageX, e.pageY]\r\n        });\r\n        break;\r\n    }\r\n    if (!this.state.drawing) {\r\n      return;\r\n    }\r\n    const ctx = this.canvas.current.getContext('2d');\r\n    // alert(ctx);\r\n    ctx.clearRect(0, 0, this.canvas.current.width, this.canvas.current.height);\r\n    ctx.setLineDash(this.state.lineDash);\r\n    ctx.strokeStyle = this.state.color;\r\n    this[this.state.tool](ctx, false);\r\n\r\n    this.drawShapes();\r\n  }\r\n\r\n  drawLine = (ctx, shape) => {\r\n    console.log('Draw Line');\r\n    console.log(shape);\r\n\r\n    if (!shape) {\r\n      shape = { startPos: this.state.startPos, currentPos: this.state.currentPos };\r\n    }\r\n    ctx.beginPath();\r\n    ctx.moveTo(shape.startPos[0], shape.startPos[1]);\r\n    ctx.lineTo(shape.currentPos[0], shape.currentPos[1]);\r\n    ctx.stroke();\r\n  };\r\n\r\n  drawSquare = (ctx, shape) => {\r\n    console.log('Draw Square');\r\n    console.log(shape);\r\n    if (!shape) {\r\n      shape = {\r\n        startPos: this.state.startPos,\r\n        rectHeight: this.state.rectHeight(),\r\n        rectWidth: this.state.rectWidth()\r\n      };\r\n    }\r\n    ctx.strokeRect(shape.startPos[0], shape.startPos[1], shape.rectWidth, shape.rectHeight);\r\n  };\r\n\r\n  drawCircle = (ctx, shape) => {\r\n    console.log('Draw Circle');\r\n    console.log(shape);\r\n    if (!shape) {\r\n      shape = { midPos: this.state.midPos(), arcRadius: this.state.arcRadius() };\r\n    }\r\n    ctx.beginPath();\r\n    ctx.arc(shape.midPos[0], shape.midPos[1], shape.arcRadius, 0, 2 * Math.PI);\r\n    ctx.stroke();\r\n  };\r\n\r\n  pickColor = e => {\r\n    this.setState({\r\n      color: getComputedStyle(e.target).color\r\n    });\r\n  };\r\n\r\n  pickLine = lineDash => {\r\n    this.setState({\r\n      lineDash\r\n    });\r\n  };\r\n\r\n  pickTool = tool => {\r\n    this.setState({\r\n      tool\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const canvas = this.canvas.current;\r\n\r\n    function resizeCanvas(canvas) {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n    }\r\n    resizeCanvas(canvas);\r\n    window.addEventListener('resize', resizeCanvas);\r\n\r\n    // let painting = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <canvas\r\n          id='canvas'\r\n          className='Canvas'\r\n          ref={this.canvas}\r\n          onTouchStart={e => this.touch(e)}\r\n          onMouseDown={e => this.touch(e)}\r\n          onTouchEnd={e => this.touch(e)}\r\n          onMouseUp={e => this.touch(e)}\r\n          onMouseMove={e => this.touch(e)}\r\n          onTouchMove={e => this.touch(e)}\r\n        ></canvas>\r\n        <Controls pickColor={this.pickColor} pickTool={this.pickTool} pickLine={this.pickLine} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Canvas from './components/Canvas';\r\n\r\nReactDOM.render(<Canvas />, document.getElementById('root'));\r\n"],"sourceRoot":""}